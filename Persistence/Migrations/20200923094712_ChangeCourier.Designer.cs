// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200923094712_ChangeCourier")]
    partial class ChangeCourier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Admin", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<short>("Role")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(2);

                    b.HasKey("Username");

                    b.HasIndex("Password");

                    b.HasIndex("Role");

                    b.HasIndex("Username");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Domain.Entities.Article", b =>
                {
                    b.Property<Guid>("IdArticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("ArticleAuthor")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ArticleBanner")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ArticleBody")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ArticleDate")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ArticleTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdArticle");

                    b.HasIndex("ArticleAuthor");

                    b.HasIndex("ArticleBody");

                    b.HasIndex("ArticleDate");

                    b.HasIndex("ArticleTitle");

                    b.HasIndex("IdArticle");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("IdCategory");

                    b.HasIndex("CategoryName");

                    b.HasIndex("IdCategory");

                    b.HasIndex("ImageUrl");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Courier", b =>
                {
                    b.Property<Guid>("IdCourier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourierArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CourierName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourierPhoneNumber")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("CourierPlateNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<short>("CourierStatus")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(2);

                    b.HasKey("IdCourier");

                    b.HasIndex("CourierArea");

                    b.HasIndex("CourierName");

                    b.HasIndex("CourierPhoneNumber");

                    b.HasIndex("CourierPlateNumber");

                    b.HasIndex("CourierStatus");

                    b.HasIndex("IdCourier");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("Domain.Entities.DetailOrder", b =>
                {
                    b.Property<Guid>("IdDetailOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<Guid>("IdProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.HasKey("IdDetailOrder");

                    b.HasIndex("IdDetailOrder");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProducts");

                    b.ToTable("DetailOrders");
                });

            modelBuilder.Entity("Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DiscountBanner")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime>("DiscountEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DiscountStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountType")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voucher")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("IdDiscount");

                    b.HasIndex("Content");

                    b.HasIndex("DiscountEnd");

                    b.HasIndex("DiscountName");

                    b.HasIndex("DiscountStart");

                    b.HasIndex("DiscountType");

                    b.HasIndex("IdDiscount");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("IdCourier")
                        .HasColumnType("Uniqueidentifier");

                    b.Property<short>("StatusOrder")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(1);

                    b.Property<DateTime>("TanggalOrder")
                        .HasColumnType("datetime2");

                    b.HasKey("IdOrder");

                    b.HasIndex("EmailUser");

                    b.HasIndex("IdOrder");

                    b.HasIndex("StatusOrder");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.ProductGL", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("BaseColor")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<short>("ConstAmount")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(12);

                    b.Property<long>("Cost")
                        .HasColumnType("BIGINT")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("BIT");

                    b.Property<bool>("IsDealoftheDay")
                        .HasColumnType("BIT");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("Stock")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(12);

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdProduct");

                    b.HasIndex("BaseColor");

                    b.HasIndex("CategoryName");

                    b.HasIndex("ConstAmount");

                    b.HasIndex("Cost");

                    b.HasIndex("IdProduct");

                    b.HasIndex("ImageUrl");

                    b.HasIndex("IsAvailable");

                    b.HasIndex("IsDealoftheDay");

                    b.HasIndex("ProductName");

                    b.HasIndex("Stock");

                    b.HasIndex("VariantName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entities.ReviewsProduct", b =>
                {
                    b.Property<Guid>("IdReviews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("IdProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<short>("Rating")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(1);

                    b.HasKey("IdReviews");

                    b.HasIndex("IdProducts");

                    b.HasIndex("IdReviews");

                    b.ToTable("ReviewsProducts");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("Gender")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(1);

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime?>("LastOrder")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("TotalOrder")
                        .HasColumnType("SMALLINT")
                        .HasMaxLength(10);

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.HasKey("UserId");

                    b.HasIndex("Address");

                    b.HasIndex("Birthday");

                    b.HasIndex("Email");

                    b.HasIndex("Gender");

                    b.HasIndex("Hobby");

                    b.HasIndex("ImageUrl");

                    b.HasIndex("LastOrder");

                    b.HasIndex("Name");

                    b.HasIndex("Password");

                    b.HasIndex("Phone");

                    b.HasIndex("TotalOrder");

                    b.HasIndex("UserId");

                    b.HasIndex("ZipCode");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
